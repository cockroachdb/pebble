name: Test

on:
  push:
    branches:
    - master
    - crl-release-*
  pull_request:
    branches:
    - master
    - crl-release-*

env:
  GO_VERSION: "1.22"

jobs:

  linux:
    name: go-linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: "${{ env.GO_VERSION }}"

    - run: GOTRACEBACK=all make test testobjiotracing generate

    - name: Assert workspace clean
      run: scripts/check-workspace-clean.sh

  linux-32bit:
    name: go-linux-32bit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "${{ env.GO_VERSION }}"

      - run: GOTRACEBACK=all GOARCH=386 make test

  linux-crossversion:
    name: go-linux-crossversion
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: "${{ env.GO_VERSION }}"

    - run: make crossversion-meta

  linux-race:
    name: go-linux-race
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: "${{ env.GO_VERSION }}"

    - run: GOTRACEBACK=all make testrace TAGS=

  linux-no-invariants:
    name: go-linux-no-invariants
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: "${{ env.GO_VERSION }}"

    - run: GOTRACEBACK=all make test TAGS=

  linux-no-cgo:
    name: go-linux-no-cgo
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: "${{ env.GO_VERSION }}"

    - run: GOTRACEBACK=all CGO_ENABLED=0 make test TAGS=

  darwin:
    name: go-macos
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: "${{ env.GO_VERSION }}"

    - run: GOTRACEBACK=all make test

  windows:
    name: go-windows
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: "${{ env.GO_VERSION }}"

    - run: go test -tags invariants ./...

  bsds:
    name: go-bsds
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: "${{ env.GO_VERSION }}"

    - name: FreeBSD build
      env:
        GOOS: freebsd
      run: go build -v ./...

    - name: NetBSD build
      env:
        GOOS: netbsd
      run: go build -v ./...

    - name: OpenBSD build
      env:
        GOOS: openbsd
      run: go build -v ./...

  go-lint-checks:
    name: go-lint-checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: "${{ env.GO_VERSION }}"

    - name: mod-tidy-check
      run: make mod-tidy-check

    - name: format-check
      run: make format-check

  go-build-other-archs:
    name: go-build-other-archs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "${{ env.GO_VERSION }}"

      - run: GOARCH=mips go build ./...
      - run: GOARCH=mipsle go build ./...
      - run: GOARCH=mips64le go build ./...
