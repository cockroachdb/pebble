name: Nightly tests

on:
  schedule:
    - cron: "0 6 * * *" # 6am UTC, daily.
  workflow_dispatch:

jobs:

  linux:
    name: linux
    strategy:
      matrix:
        go: [ '1.23' ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - run: GOTRACEBACK=all make test testobjiotracing generate

      - name: Assert workspace clean
        run: scripts/check-workspace-clean.sh

      - name: Post issue on failure
        if: failure()
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "nightly test failed"
          body: "The nightly ${{ github.job_id }} test run failed on ${{ github.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          unique-title-includes: "nightly test failed"
          labels: "C-test-failure"


  linux-32bit:
    name: linux-32bit
    strategy:
      matrix:
        go: [ '1.23' ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - run: GOTRACEBACK=all GOARCH=386 make test

      - name: Post issue on failure
        if: failure()
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "nightly test failed"
          body: "The nightly ${{ github.job_id }} test run failed on ${{ github.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          unique-title-includes: "nightly test failed"
          labels: "C-test-failure"


  linux-arm:
    name: linux-arm
    strategy:
      matrix:
        go: [ '1.23' ]
    runs-on: ubuntu-22.04-arm
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - run: GOTRACEBACK=all make test

      - name: Post issue on failure
        if: failure()
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "nightly test failed"
          body: "The nightly ${{ github.job_id }} test run failed on ${{ github.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          unique-title-includes: "nightly test failed"
          labels: "C-test-failure"


  linux-crossversion:
    name: linux-crossversion
    strategy:
      matrix:
        go: [ '1.23' ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # This target needs to find the crl-release-* branches.
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - run: make crossversion-meta

      - name: Post issue on failure
        if: failure()
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "nightly test failed"
          body: "The nightly ${{ github.job_id }} test run failed on ${{ github.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          unique-title-includes: "nightly test failed"
          labels: "C-test-failure"


  linux-no-invariants:
    name: linux-no-invariants
    strategy:
      matrix:
        go: [ '1.23' ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - run: GOTRACEBACK=all make test TAGS=

      - name: Post issue on failure
        if: failure()
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "nightly test failed"
          body: "The nightly ${{ github.job_id }} test run failed on ${{ github.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          unique-title-includes: "nightly test failed"
          labels: "C-test-failure"


  linux-no-cgo:
    name: linux-no-cgo
    strategy:
      matrix:
        go: [ '1.23' ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - run: GOTRACEBACK=all CGO_ENABLED=0 make test TAGS=

      - name: Post issue on failure
        if: failure()
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "nightly test failed"
          body: "The nightly ${{ github.job_id }} test run failed on ${{ github.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          unique-title-includes: "nightly test failed"
          labels: "C-test-failure"


  darwin:
    name: macos
    strategy:
      matrix:
        go: [ '1.23' ]
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - run: GOTRACEBACK=all make test

      - name: Post issue on failure
        if: failure()
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "nightly test failed"
          body: "The nightly ${{ github.job_id }} test run failed on ${{ github.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          unique-title-includes: "nightly test failed"
          labels: "C-test-failure"


  windows:
    name: windows
    strategy:
      matrix:
        go: [ '1.23' ]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - run: go test -tags invariants ./...

      - name: Post issue on failure
        if: failure()
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "nightly test failed"
          body: "The nightly ${{ github.job_id }} test run failed on ${{ github.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          unique-title-includes: "nightly test failed"
          labels: "C-test-failure"

  lint-checks:
    name: lint-checks
    strategy:
      matrix:
        go: [ '1.23' ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - name: mod-tidy-check
        run: make mod-tidy-check

      - name: format-check
        run: make format-check

      - name: Post issue on failure
        if: failure()
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "nightly test failed"
          body: "The nightly ${{ github.job_id }} test run failed on ${{ github.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          unique-title-includes: "nightly test failed"
          labels: "C-test-failure"


  # Builds for other architectures.
  build-other:
    name: build-other
    strategy:
      matrix:
        go: [ '1.23' ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - run: GOARCH=mips go build ./...
      - run: GOARCH=mipsle go build ./...
      - run: GOARCH=mips64le go build ./...
      - run: GOOS=freebsd go build -v ./...
      - run: GOOS=netbsd go build -v ./...
      - run: GOOS=openbsd go build -v ./...

      - name: Post issue on failure
        if: failure()
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "nightly test failed"
          body: "The nightly ${{ github.job_id }} test run failed on ${{ github.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          unique-title-includes: "nightly test failed"
          labels: "C-test-failure"
