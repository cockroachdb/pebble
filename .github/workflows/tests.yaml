name: Tests

on:
  workflow_call:
    inputs:
      sha:
        description: 'SHA to run against'
        required: false
        type: string
      file_issue_branch:
        description: 'Branch used in filed issues; if unset, no issues are filed'
        required: false
        type: string
      go_version:
        description: 'Go version'
        required: false
        default: '1.24'
        type: string
  workflow_dispatch:
    inputs:
      sha:
        description: 'SHA to run against'
        required: false
        type: string
      file_issue_branch:
        description: 'Branch used in filed issues; if unset, no issues are filed'
        required: false
        type: string
      go_version:
        description: 'Go version'
        required: false
        default: '1.24'
        type: string

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha || github.sha }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go_version }}

      - run: GOTRACEBACK=all make test testobjiotracing generate

      - name: Assert workspace clean
        run: scripts/check-workspace-clean.sh

      - name: Post issue on failure
        if: failure() && inputs.file_issue_branch != ''
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "${{ inputs.file_issue_branch }}: nightly ${{ github.job }} failed"
          body: "The nightly ${{ github.job }} test run failed on ${{ inputs.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          labels: "C-test-failure"


  linux-32bit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha || github.sha }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go_version }}

      - run: GOTRACEBACK=all GOARCH=386 make test

      - name: Post issue on failure
        if: failure() && inputs.file_issue_branch != ''
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "${{ inputs.file_issue_branch }}: nightly linux-32bit test failed"
          body: "The nightly ${{ github.job }} test run failed on ${{ inputs.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          labels: "C-test-failure"


  linux-arm:
    runs-on: ubuntu-22.04-arm
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha || github.sha }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go_version }}

      - run: GOTRACEBACK=all make test

      - name: Post issue on failure
        if: failure() && inputs.file_issue_branch != ''
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "${{ inputs.file_issue_branch }}: nightly linux-arm test failed"
          body: "The nightly ${{ github.job }} test run failed on ${{ inputs.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          labels: "C-test-failure"


  linux-crossversion:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha || github.sha }}
          # crossversion-meta needs to be able to checkout the latest
          # crl-release-* branch.
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go_version }}

      - run: make crossversion-meta

      - name: Post issue on failure
        if: failure() && inputs.file_issue_branch != ''
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "${{ inputs.file_issue_branch }}: nightly crossversion test failed"
          body: "The nightly ${{ github.job }} test run failed on ${{ inputs.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          labels: "C-test-failure"


  linux-no-invariants:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha || github.sha }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go_version }}

      - run: GOTRACEBACK=all make test TAGS=

      - name: Post issue on failure
        if: failure() && inputs.file_issue_branch != ''
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "${{ inputs.file_issue_branch }}: nightly ${{ github.job }} failed"
          body: "The nightly ${{ github.job }} test run failed on ${{ inputs.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          labels: "C-test-failure"


  linux-no-cgo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha || github.sha }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go_version }}

      - run: GOTRACEBACK=all CGO_ENABLED=0 make test TAGS=

      - name: Post issue on failure
        if: failure() && inputs.file_issue_branch != ''
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "${{ inputs.file_issue_branch }}: nightly ${{ github.job }} failed"
          body: "The nightly ${{ github.job }} test run failed on ${{ inputs.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          labels: "C-test-failure"


  darwin:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha || github.sha }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go_version }}

      - run: GOTRACEBACK=all make test

      - name: Post issue on failure
        if: failure() && inputs.file_issue_branch != ''
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "${{ inputs.file_issue_branch }}: nightly ${{ github.job }} failed"
          body: "The nightly ${{ github.job }} test run failed on ${{ inputs.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          labels: "C-test-failure"


  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha || github.sha }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go_version }}

      - run: go test -tags invariants ./...

      - name: Post issue on failure
        if: failure() && inputs.file_issue_branch != ''
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "${{ inputs.file_issue_branch }}: nightly ${{ github.job }} failed"
          body: "The nightly ${{ github.job }} test run failed on ${{ inputs.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          labels: "C-test-failure"

  lint-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha || github.sha }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go_version }}

      - name: mod-tidy-check
        run: make mod-tidy-check

      - name: format-check
        run: make format-check

      - name: Post issue on failure
        if: failure() && inputs.file_issue_branch != ''
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "${{ inputs.file_issue_branch }}: nightly ${{ github.job }} test failed"
          body: "The nightly ${{ github.job }} test run failed on ${{ inputs.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          labels: "C-test-failure"


  # Builds for other architectures.
  build-other:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha || github.sha }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go_version }}

      - run: GOARCH=mips go build ./...
      - run: GOARCH=mipsle go build ./...
      - run: GOARCH=mips64le go build ./...
      - run: GOOS=freebsd go build -v ./...
      - run: GOOS=netbsd go build -v ./...
      - run: GOOS=openbsd go build -v ./...

      - name: Post issue on failure
        if: failure() && inputs.file_issue_branch != ''
        id: create-or-update-unique-issue
        uses: ./.github/actions/post-issue
        with:
          title: "${{ inputs.file_issue_branch }}: nightly ${{ github.job }} failed"
          body: "The nightly ${{ github.job }} test run failed on ${{ inputs.sha }}. Please review the run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          labels: "C-test-failure"
