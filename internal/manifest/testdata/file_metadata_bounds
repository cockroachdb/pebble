# Points only (single update).

extend-point-key-bounds
a.SET.0 - z.DEL.42
----
000000:[a#0,SET-z#42,DEL] points:[a#0,SET-z#42,DEL]

# Rangedels only (single update).

reset
----

extend-point-key-bounds
a.RANGEDEL.0:z
----
000000:[a#0,RANGEDEL-z#72057594037927935,RANGEDEL] points:[a#0,RANGEDEL-z#72057594037927935,RANGEDEL]

# Range keys only (single update).

reset
----

extend-range-key-bounds
a.RANGEKEYSET.0:z
----
000000:[a#0,RANGEKEYSET-z#72057594037927935,RANGEKEYSET] ranges:[a#0,RANGEKEYSET-z#72057594037927935,RANGEKEYSET]

# Multiple updates with various key kinds.

reset
----

extend-point-key-bounds
m.SET.0 - n.SET.0
----
000000:[m#0,SET-n#0,SET] points:[m#0,SET-n#0,SET]

# Extend the lower point key bound.

extend-point-key-bounds
j.SET.0 - k.SET.0
----
000000:[j#0,SET-n#0,SET] points:[j#0,SET-n#0,SET]

# Extend the upper point key bound with a rangedel.

extend-point-key-bounds
k.RANGEDEL.0:o
----
000000:[j#0,SET-o#72057594037927935,RANGEDEL] points:[j#0,SET-o#72057594037927935,RANGEDEL]

# Extend the lower bounds bound with a range key.

extend-range-key-bounds
a.RANGEKEYSET.42:m
----
000000:[a#42,RANGEKEYSET-o#72057594037927935,RANGEDEL] points:[j#0,SET-o#72057594037927935,RANGEDEL] ranges:[a#42,RANGEKEYSET-m#72057594037927935,RANGEKEYSET]

# Extend again with a wide range key (equal keys tiebreak on seqnums descending,
# so the overall lower bound is unchanged).

extend-range-key-bounds
a.RANGEKEYSET.0:z
----
000000:[a#42,RANGEKEYSET-z#72057594037927935,RANGEKEYSET] points:[j#0,SET-o#72057594037927935,RANGEDEL] ranges:[a#42,RANGEKEYSET-z#72057594037927935,RANGEKEYSET]

# Extend again with a wide rangedel over the same range (equal keys and sequnums
# tiebreak on key kind descending, so the overall upper bound is updated).

extend-point-key-bounds
a.RANGEDEL.0:z
----
000000:[a#42,RANGEKEYSET-z#72057594037927935,RANGEDEL] points:[a#0,RANGEDEL-z#72057594037927935,RANGEDEL] ranges:[a#42,RANGEKEYSET-z#72057594037927935,RANGEKEYSET]
