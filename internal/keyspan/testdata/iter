define
a-b:{(#2,SET) (#1,SET)}
b-c:{(#2,SET) (#1,SET)}
c-d:{(#2,SET) (#1,SET)}
----

iter
seek-ge a
seek-ge b
seek-ge c
seek-ge d
seek-lt a
seek-lt b
seek-lt c
seek-lt d
----
a-b:{(#2,SET) (#1,SET)}
b-c:{(#2,SET) (#1,SET)}
c-d:{(#2,SET) (#1,SET)}
.
.
a-b:{(#2,SET) (#1,SET)}
b-c:{(#2,SET) (#1,SET)}
c-d:{(#2,SET) (#1,SET)}

iter
first
next
prev
prev
next
next
next
prev
next
next
prev
----
a-b:{(#2,SET) (#1,SET)}
b-c:{(#2,SET) (#1,SET)}
a-b:{(#2,SET) (#1,SET)}
.
a-b:{(#2,SET) (#1,SET)}
b-c:{(#2,SET) (#1,SET)}
c-d:{(#2,SET) (#1,SET)}
b-c:{(#2,SET) (#1,SET)}
c-d:{(#2,SET) (#1,SET)}
.
c-d:{(#2,SET) (#1,SET)}

# a-b:{(#2,SET) (#1,SET)}
# b-c:{(#2,SET) (#1,SET)}
# c-d:{(#2,SET) (#1,SET)}

iter
set-bounds x z
first
last
seek-ge x
seek-lt z
----
.
.
.
.
.

iter
set-bounds cap cat
first
last
seek-ge c
next
seek-lt cat
prev
----
.
c-d:{(#2,SET) (#1,SET)}
c-d:{(#2,SET) (#1,SET)}
c-d:{(#2,SET) (#1,SET)}
.
c-d:{(#2,SET) (#1,SET)}
.

iter
set-bounds a cc
first
next
next
next
----
.
a-b:{(#2,SET) (#1,SET)}
b-c:{(#2,SET) (#1,SET)}
c-d:{(#2,SET) (#1,SET)}
.

iter
set-bounds a c
first
next
next
----
.
a-b:{(#2,SET) (#1,SET)}
b-c:{(#2,SET) (#1,SET)}
.

iter
set-bounds b cc
first
next
next
----
.
b-c:{(#2,SET) (#1,SET)}
c-d:{(#2,SET) (#1,SET)}
.
