# Note that these versions are the same MVCC timestamp:
#   0102030405060708
#   0102030405060708000000000 (zero logical)
#   01020304050607080000000001 (zero logical, synthetic bit)
init
foo #3,SET = nosuffix3
foo #2,SET = nosuffix2
foo #1,SET = nosuffix1
foo @ 0102030405060708091011121314151617 #1,SET = lockkey
foo @ 010203040506070801020304 #2,SET = mvcclogical2
foo @ 01020304050607080102030401 #1,SET = mvcclogical1
foo @ 010203040506070800000000 #4,SET = mvcc4
foo @ 0102030405060708 #3,SET = mvcc3
foo @ 01020304050607080000000001 #2,SET = mvcc2
foo @ 0102030405060708 #1,SET = mvcc1
"foo\x00" @ 0102030405060708 #1,SET = mvcc1
fop #1,SET = foo
x #1,SET = x
----
13 rows, total size 433B

keys
----
foo #3,SET = nosuffix3
foo #2,SET = nosuffix2
foo #1,SET = nosuffix1
foo @ 0102030405060708091011121314151617 #1,SET = lockkey
foo @ 010203040506070801020304 #2,SET = mvcclogical2
foo @ 010203040506070801020304 #1,SET = mvcclogical1
foo @ 0102030405060708 #4,SET = mvcc4
foo @ 0102030405060708 #3,SET = mvcc3
foo @ 0102030405060708 #2,SET = mvcc2
foo @ 0102030405060708 #1,SET = mvcc1
"foo\x00" @ 0102030405060708 #1,SET = mvcc1
fop #1,SET = foo
x #1,SET = x

describe
----
data block header
 ├── columnar block header
 │    ├── 000-001: x 07       # key schema header
 │    ├── 001-005: x 16000000 # maximum key length: 22
 │    ├── 005-006: x 01       # version 1
 │    ├── 006-008: x 0900     # 9 columns
 │    ├── 008-012: x 0d000000 # 13 rows
 │    ├── 012-013: b 00000100 # col 0: prefixbytes
 │    ├── 013-017: x 39000000 # col 0: page start 57
 │    ├── 017-018: b 00000010 # col 1: uint
 │    ├── 018-022: x 55000000 # col 1: page start 85
 │    ├── 022-023: b 00000010 # col 2: uint
 │    ├── 023-027: x c0000000 # col 2: page start 192
 │    ├── 027-028: b 00000011 # col 3: bytes
 │    ├── 028-032: x f8000000 # col 3: page start 248
 │    ├── 032-033: b 00000010 # col 4: uint
 │    ├── 033-037: x 18010000 # col 4: page start 280
 │    ├── 037-038: b 00000001 # col 5: bool
 │    ├── 038-042: x 34010000 # col 5: page start 308
 │    ├── 042-043: b 00000011 # col 6: bytes
 │    ├── 043-047: x 48010000 # col 6: page start 328
 │    ├── 047-048: b 00000001 # col 7: bool
 │    ├── 048-052: x ae010000 # col 7: page start 430
 │    ├── 052-053: b 00000001 # col 8: bool
 │    └── 053-057: x af010000 # col 8: page start 431
 ├── data for column 0 (prefixbytes)
 │    ├── 057-058: x 04 # bundle size: 16
 │    ├── offsets table
 │    │    ├── 058-059: x 01 # encoding: 1b
 │    │    ├── 059-060: x 00 # data[0] = 0 [74 overall]
 │    │    ├── 060-061: x 00 # data[1] = 0 [74 overall]
 │    │    ├── 061-062: x 03 # data[2] = 3 [77 overall]
 │    │    ├── 062-063: x 03 # data[3] = 3 [77 overall]
 │    │    ├── 063-064: x 03 # data[4] = 3 [77 overall]
 │    │    ├── 064-065: x 03 # data[5] = 3 [77 overall]
 │    │    ├── 065-066: x 03 # data[6] = 3 [77 overall]
 │    │    ├── 066-067: x 03 # data[7] = 3 [77 overall]
 │    │    ├── 067-068: x 03 # data[8] = 3 [77 overall]
 │    │    ├── 068-069: x 03 # data[9] = 3 [77 overall]
 │    │    ├── 069-070: x 03 # data[10] = 3 [77 overall]
 │    │    ├── 070-071: x 03 # data[11] = 3 [77 overall]
 │    │    ├── 071-072: x 07 # data[12] = 7 [81 overall]
 │    │    ├── 072-073: x 0a # data[13] = 10 [84 overall]
 │    │    └── 073-074: x 0b # data[14] = 11 [85 overall]
 │    └── data
 │         ├── 074-074: x          # data[00]:  (block prefix)
 │         ├── 074-074: x          # data[01]:  (bundle prefix)
 │         ├── 074-077: x 666f6f   # data[02]: foo
 │         ├── 077-077: x          # data[03]: ...
 │         ├── 077-077: x          # data[04]: ...
 │         ├── 077-077: x          # data[05]: ...
 │         ├── 077-077: x          # data[06]: ...
 │         ├── 077-077: x          # data[07]: ...
 │         ├── 077-077: x          # data[08]: ...
 │         ├── 077-077: x          # data[09]: ...
 │         ├── 077-077: x          # data[10]: ...
 │         ├── 077-077: x          # data[11]: ...
 │         ├── 077-081: x 666f6f00 # data[12]: "foo\x00"
 │         ├── 081-084: x 666f70   # data[13]: fop
 │         └── 084-085: x 78       # data[14]: x
 ├── data for column 1 (uint)
 │    ├── 085-086: x 08               # encoding: 8b
 │    ├── 086-088: x 0000             # padding (aligning to 64-bit boundary)
 │    ├── 088-096: x 0000000000000000 # data[0] = 0
 │    ├── 096-104: x 0000000000000000 # data[1] = 0
 │    ├── 104-112: x 0000000000000000 # data[2] = 0
 │    ├── 112-120: x 0000000000000000 # data[3] = 0
 │    ├── 120-128: x 0807060504030201 # data[4] = 72623859790382856
 │    ├── 128-136: x 0807060504030201 # data[5] = 72623859790382856
 │    ├── 136-144: x 0807060504030201 # data[6] = 72623859790382856
 │    ├── 144-152: x 0807060504030201 # data[7] = 72623859790382856
 │    ├── 152-160: x 0807060504030201 # data[8] = 72623859790382856
 │    ├── 160-168: x 0807060504030201 # data[9] = 72623859790382856
 │    ├── 168-176: x 0807060504030201 # data[10] = 72623859790382856
 │    ├── 176-184: x 0000000000000000 # data[11] = 0
 │    └── 184-192: x 0000000000000000 # data[12] = 0
 ├── data for column 2 (uint)
 │    ├── 192-193: x 04       # encoding: 4b
 │    ├── 193-196: x 000000   # padding (aligning to 32-bit boundary)
 │    ├── 196-200: x 00000000 # data[0] = 0
 │    ├── 200-204: x 00000000 # data[1] = 0
 │    ├── 204-208: x 00000000 # data[2] = 0
 │    ├── 208-212: x 00000000 # data[3] = 0
 │    ├── 212-216: x 04030201 # data[4] = 16909060
 │    ├── 216-220: x 04030201 # data[5] = 16909060
 │    ├── 220-224: x 00000000 # data[6] = 0
 │    ├── 224-228: x 00000000 # data[7] = 0
 │    ├── 228-232: x 00000000 # data[8] = 0
 │    ├── 232-236: x 00000000 # data[9] = 0
 │    ├── 236-240: x 00000000 # data[10] = 0
 │    ├── 240-244: x 00000000 # data[11] = 0
 │    └── 244-248: x 00000000 # data[12] = 0
 ├── data for column 3 (bytes)
 │    ├── offsets table
 │    │    ├── 248-249: x 01 # encoding: 1b
 │    │    ├── 249-250: x 00 # data[0] = 0 [263 overall]
 │    │    ├── 250-251: x 00 # data[1] = 0 [263 overall]
 │    │    ├── 251-252: x 00 # data[2] = 0 [263 overall]
 │    │    ├── 252-253: x 00 # data[3] = 0 [263 overall]
 │    │    ├── 253-254: x 11 # data[4] = 17 [280 overall]
 │    │    ├── 254-255: x 11 # data[5] = 17 [280 overall]
 │    │    ├── 255-256: x 11 # data[6] = 17 [280 overall]
 │    │    ├── 256-257: x 11 # data[7] = 17 [280 overall]
 │    │    ├── 257-258: x 11 # data[8] = 17 [280 overall]
 │    │    ├── 258-259: x 11 # data[9] = 17 [280 overall]
 │    │    ├── 259-260: x 11 # data[10] = 17 [280 overall]
 │    │    ├── 260-261: x 11 # data[11] = 17 [280 overall]
 │    │    ├── 261-262: x 11 # data[12] = 17 [280 overall]
 │    │    └── 262-263: x 11 # data[13] = 17 [280 overall]
 │    └── data
 │         ├── 263-263: x                                    # data[0]:
 │         ├── 263-263: x                                    # data[1]:
 │         ├── 263-263: x                                    # data[2]:
 │         ├── 263-280: x 0102030405060708091011121314151617 # data[3]: "\x01\x02\x03\x04\x05\x06\a\b\t\x10\x11\x12\x13\x14\x15\x16\x17"
 │         ├── 280-280: x                                    # data[4]:
 │         ├── 280-280: x                                    # data[5]:
 │         ├── 280-280: x                                    # data[6]:
 │         ├── 280-280: x                                    # data[7]:
 │         ├── 280-280: x                                    # data[8]:
 │         ├── 280-280: x                                    # data[9]:
 │         ├── 280-280: x                                    # data[10]:
 │         ├── 280-280: x                                    # data[11]:
 │         └── 280-280: x                                    # data[12]:
 ├── data for column 4 (uint)
 │    ├── 280-281: x 02   # encoding: 2b
 │    ├── 281-282: x 00   # padding (aligning to 16-bit boundary)
 │    ├── 282-284: x 0103 # data[0] = 769
 │    ├── 284-286: x 0102 # data[1] = 513
 │    ├── 286-288: x 0101 # data[2] = 257
 │    ├── 288-290: x 0101 # data[3] = 257
 │    ├── 290-292: x 0102 # data[4] = 513
 │    ├── 292-294: x 0101 # data[5] = 257
 │    ├── 294-296: x 0104 # data[6] = 1025
 │    ├── 296-298: x 0103 # data[7] = 769
 │    ├── 298-300: x 0102 # data[8] = 513
 │    ├── 300-302: x 0101 # data[9] = 257
 │    ├── 302-304: x 0101 # data[10] = 257
 │    ├── 304-306: x 0101 # data[11] = 257
 │    └── 306-308: x 0101 # data[12] = 257
 ├── data for column 5 (bool)
 │    ├── 308-309: x 00                                                               # default bitmap encoding
 │    ├── 309-312: x 000000                                                           # padding to align to 64-bit boundary
 │    ├── 312-320: b 0000000100011100000000000000000000000000000000000000000000000000 # bitmap word 0
 │    └── 320-328: b 0000000100000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63
 ├── data for column 6 (bytes)
 │    ├── offsets table
 │    │    ├── 328-329: x 01 # encoding: 1b
 │    │    ├── 329-330: x 00 # data[0] = 0 [343 overall]
 │    │    ├── 330-331: x 09 # data[1] = 9 [352 overall]
 │    │    ├── 331-332: x 12 # data[2] = 18 [361 overall]
 │    │    ├── 332-333: x 1b # data[3] = 27 [370 overall]
 │    │    ├── 333-334: x 22 # data[4] = 34 [377 overall]
 │    │    ├── 334-335: x 2e # data[5] = 46 [389 overall]
 │    │    ├── 335-336: x 3a # data[6] = 58 [401 overall]
 │    │    ├── 336-337: x 3f # data[7] = 63 [406 overall]
 │    │    ├── 337-338: x 44 # data[8] = 68 [411 overall]
 │    │    ├── 338-339: x 49 # data[9] = 73 [416 overall]
 │    │    ├── 339-340: x 4e # data[10] = 78 [421 overall]
 │    │    ├── 340-341: x 53 # data[11] = 83 [426 overall]
 │    │    ├── 341-342: x 56 # data[12] = 86 [429 overall]
 │    │    └── 342-343: x 57 # data[13] = 87 [430 overall]
 │    └── data
 │         ├── 343-352: x 6e6f73756666697833       # data[0]: nosuffix3
 │         ├── 352-361: x 6e6f73756666697832       # data[1]: nosuffix2
 │         ├── 361-370: x 6e6f73756666697831       # data[2]: nosuffix1
 │         ├── 370-377: x 6c6f636b6b6579           # data[3]: lockkey
 │         ├── 377-389: x 6d7663636c6f676963616c32 # data[4]: mvcclogical2
 │         ├── 389-401: x 6d7663636c6f676963616c31 # data[5]: mvcclogical1
 │         ├── 401-406: x 6d76636334               # data[6]: mvcc4
 │         ├── 406-411: x 6d76636333               # data[7]: mvcc3
 │         ├── 411-416: x 6d76636332               # data[8]: mvcc2
 │         ├── 416-421: x 6d76636331               # data[9]: mvcc1
 │         ├── 421-426: x 6d76636331               # data[10]: mvcc1
 │         ├── 426-429: x 666f6f                   # data[11]: foo
 │         └── 429-430: x 78                       # data[12]: x
 ├── data for column 7 (bool)
 │    └── 430-431: x 01 # zero bitmap encoding
 ├── data for column 8 (bool)
 │    └── 431-432: x 01 # zero bitmap encoding
 └── 432-433: x 00 # block padding byte
