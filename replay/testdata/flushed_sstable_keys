commit
set a a
set b b
set c c
----

flush
----
[JOB 6] flushed 1 memtable to L0 [000005] (795 B), in 1.0s (1.0s total), output rate 795 B/s
a.SET: a
b.SET: b
c.SET: c

# Test that the keys in the batch are in the same order they were originally
# committed, not sorted by user key.

commit
set c c
set b b
set a a
----

flush
----
[JOB 8] flushed 1 memtable to L0 [000007] (795 B), in 1.0s (1.0s total), output rate 795 B/s
c.SET: c
b.SET: b
a.SET: a

# Test that the keys in the batch are in the same order they were originally
# committed, not sorted by user key.

commit
set c c
del b
del-range d f
singledel a
----

flush
----
[JOB 11] flushed 1 memtable to L0 [000010] (872 B), in 1.0s (1.0s total), output rate 872 B/s
c.SET: c
b.DEL
d.RANGEDEL-f
a.SINGLEDEL

commit
set x foo
range-key-del a z
range-key-unset g h @3
range-key-set l m @1 foo
set a bar
del y
----

flush
----
[JOB 14] flushed 1 memtable to L0 [000012] (1.0 K), in 1.0s (1.0s total), output rate 1.0 K/s
x.SET: foo
a.RANGEKEYDEL-g
g.RANGEKEYDEL-h
h.RANGEKEYDEL-l
l.RANGEKEYDEL-m
m.RANGEKEYDEL-z
g.RANGEKEYUNSET-h: @3
l.RANGEKEYSET-m: @1 â†’ foo
a.SET: bar
y.DEL
