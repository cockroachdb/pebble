# Two collectors are available:
# - value-first - uses the first character of the value to construct an interval
# - value-last - uses the last character of the value to construct an interval

# Single collector.

build collector=value-first
a.SET.1:10
b.SET.2:20
c.SET.3:30
----
point:    [a#1,1,c#3,1]
rangedel: [#0,0,#0,0]
rangekey: [#0,0,#0,0]
seqnums:  [1,3]

# collectors returns the collectors used when writing the table, keyed by the
# shortID of the collector.
collectors
----
0: value-first

# table-props returns the table-level properties, keyed by the shortID.
table-props
----
0: [1, 4)

# block-props returns the block-level properties. For each block, the separator
# is printed, along with the properties for the block, keyed by the shortID.
block-props
----
d#72057594037927935,17:
  0: [1, 4)

# Multiple collectors.

build collector=value-first collector=value-last
a.SET.1:17
b.SET.2:29
c.SET.3:38
----
point:    [a#1,1,c#3,1]
rangedel: [#0,0,#0,0]
rangekey: [#0,0,#0,0]
seqnums:  [1,3]

collectors
----
0: value-first
1: value-last

table-props
----
0: [1, 4)
1: [7, 10)

block-props
----
d#72057594037927935,17:
  0: [1, 4)
  1: [7, 10)

# Reduce the block size to a value such that each block has at most two KV
# pairs.

build block-size=25 collector=value-first collector=value-last
a.SET.1:15
b.SET.2:86
c.SET.3:72
d.SET.4:21
e.SET.5:47
f.SET.6:54
g.SET.7:63
h.SET.8:38
----
point:    [a#1,1,h#8,1]
rangedel: [#0,0,#0,0]
rangekey: [#0,0,#0,0]
seqnums:  [1,8]

collectors
----
0: value-first
1: value-last

table-props
----
0: [1, 9)
1: [1, 9)

block-props
----
b#2,1:
  0: [1, 9)
  1: [5, 7)
d#4,1:
  0: [2, 8)
  1: [1, 3)
f#6,1:
  0: [4, 6)
  1: [4, 8)
i#72057594037927935,17:
  0: [3, 7)
  1: [3, 9)


# Table contains range-keys.

build collector=range-key
a@3.RANGEKEYSET.3:b [(@3=foo)]
b@2.RANGEKEYSET.2:c [(@2=bar)]
c@1.RANGEKEYSET.1:d [(@1=baz)]
----
point:    [#0,0,#0,0]
rangedel: [#0,0,#0,0]
rangekey: [a@3#3,21,d#72057594037927935,21]
seqnums:  [1,3]

collectors
----
0: range-key

table-props
----
0: [1, 4)

# Table contains range-keys with multiple suffix-values and different range key
# kinds.

build collector=range-key
a@300.RANGEKEYSET.3:b [(@90=foo,@80=bar,@70=baz)]
b@200.RANGEKEYUNSET.2:c [@60,@50,@40]
c@100.RANGEKEYDEL.1:d
----
point:    [#0,0,#0,0]
rangedel: [#0,0,#0,0]
rangekey: [a@300#3,21,d#72057594037927935,19]
seqnums:  [1,3]

collectors
----
0: range-key

table-props
----
0: [40, 301)

# Table contains a mixture of point and range keys, with three collectors.

build collector=value-first collector=range-key collector=value-last
a@60.SET.6:123
a@50.RANGEKEYSET.5:b [(@3=foo)]
b@40.SET.4:456
b@30.RANGEKEYDEL.3:c
c@20.SET.2:789
c@10.RANGEKEYUNSET.1:d [@5]
----
point:    [a@60#6,1,c@20#2,1]
rangedel: [#0,0,#0,0]
rangekey: [a@50#5,21,d#72057594037927935,20]
seqnums:  [1,6]

collectors
----
0: value-first
1: range-key
2: value-last

table-props
----
0: [1, 8)
1: [3, 51)
2: [3, 10)

block-props
----
d#72057594037927935,17:
  0: [1, 8)
  2: [3, 10)
