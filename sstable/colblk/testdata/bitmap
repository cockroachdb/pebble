build
00000
----
00000
Binary representation:
0-1: x 01 # bitmap encoding

build invert
00000
----
11111
Binary representation:
00-01: x 00                                                               # bitmap encoding
01-08: x 00000000000000                                                   # padding to align to 64-bit boundary
08-16: b 0001111100000000000000000000000000000000000000000000000000000000 # bitmap word 0
16-24: b 0000000100000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63

# An inverted bitmap never uses the zero encoding.
build invert
11111
----
00000
Binary representation:
00-01: x 00                                                               # bitmap encoding
01-08: x 00000000000000                                                   # padding to align to 64-bit boundary
08-16: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap word 0
16-24: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63

build rows=100
0
----
0000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000
Binary representation:
0-1: x 01 # bitmap encoding

build
10101011100011100
----
10101011100011100
Binary representation:
00-01: x 00                                                               # bitmap encoding
01-08: x 00000000000000                                                   # padding to align to 64-bit boundary
08-16: b 1101010101110001000000000000000000000000000000000000000000000000 # bitmap word 0
16-24: b 0000000100000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63

seek-set-ge indexes=(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)
----
bitmap.SeekSetBitGE(0) = 0
bitmap.SeekSetBitGE(1) = 2
bitmap.SeekSetBitGE(2) = 2
bitmap.SeekSetBitGE(3) = 4
bitmap.SeekSetBitGE(4) = 4
bitmap.SeekSetBitGE(5) = 6
bitmap.SeekSetBitGE(6) = 6
bitmap.SeekSetBitGE(7) = 7
bitmap.SeekSetBitGE(8) = 8
bitmap.SeekSetBitGE(9) = 12
bitmap.SeekSetBitGE(10) = 12
bitmap.SeekSetBitGE(11) = 12
bitmap.SeekSetBitGE(12) = 12
bitmap.SeekSetBitGE(13) = 13
bitmap.SeekSetBitGE(14) = 14
bitmap.SeekSetBitGE(15) = 17
bitmap.SeekSetBitGE(16) = 17

seek-set-le indexes=(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)
----
bitmap.SeekSetBitLE(0) = 0
bitmap.SeekSetBitLE(1) = 0
bitmap.SeekSetBitLE(2) = 2
bitmap.SeekSetBitLE(3) = 2
bitmap.SeekSetBitLE(4) = 4
bitmap.SeekSetBitLE(5) = 4
bitmap.SeekSetBitLE(6) = 6
bitmap.SeekSetBitLE(7) = 7
bitmap.SeekSetBitLE(8) = 8
bitmap.SeekSetBitLE(9) = 8
bitmap.SeekSetBitLE(10) = 8
bitmap.SeekSetBitLE(11) = 8
bitmap.SeekSetBitLE(12) = 12
bitmap.SeekSetBitLE(13) = 13
bitmap.SeekSetBitLE(14) = 14
bitmap.SeekSetBitLE(15) = 14
bitmap.SeekSetBitLE(16) = 14

# Test calling Invert() before finishing.

build invert
10101011100011100
----
01010100011100011
Binary representation:
00-01: x 00                                                               # bitmap encoding
01-08: x 00000000000000                                                   # padding to align to 64-bit boundary
08-16: b 0010101010001110000000010000000000000000000000000000000000000000 # bitmap word 0
16-24: b 0000000100000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63


build
1
----
1
Binary representation:
00-01: x 00                                                               # bitmap encoding
01-08: x 00000000000000                                                   # padding to align to 64-bit boundary
08-16: b 0000000100000000000000000000000000000000000000000000000000000000 # bitmap word 0
16-24: b 0000000100000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63

# Test sparseness; relying on the tailing bits being implicitly zeroed.

build rows=512
1
----
1000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
Binary representation:
000-001: x 00                                                               # bitmap encoding
001-008: x 00000000000000                                                   # padding to align to 64-bit boundary
008-016: b 0000000100000000000000000000000000000000000000000000000000000000 # bitmap word 0
016-024: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap word 1
024-032: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap word 2
032-040: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap word 3
040-048: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap word 4
048-056: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap word 5
056-064: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap word 6
064-072: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap word 7
072-080: b 0000000100000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63

build invert
1
----
0
Binary representation:
00-01: x 00                                                               # bitmap encoding
01-08: x 00000000000000                                                   # padding to align to 64-bit boundary
08-16: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap word 0
16-24: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63

# Test sparseness with inversion, relying on the trailing bits being implicitly
# set to one.

build invert rows=512
1
----
0111111111111111111111111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111
Binary representation:
000-001: x 00                                                               # bitmap encoding
001-008: x 00000000000000                                                   # padding to align to 64-bit boundary
008-016: b 1111111011111111111111111111111111111111111111111111111111111111 # bitmap word 0
016-024: b 1111111111111111111111111111111111111111111111111111111111111111 # bitmap word 1
024-032: b 1111111111111111111111111111111111111111111111111111111111111111 # bitmap word 2
032-040: b 1111111111111111111111111111111111111111111111111111111111111111 # bitmap word 3
040-048: b 1111111111111111111111111111111111111111111111111111111111111111 # bitmap word 4
048-056: b 1111111111111111111111111111111111111111111111111111111111111111 # bitmap word 5
056-064: b 1111111111111111111111111111111111111111111111111111111111111111 # bitmap word 6
064-072: b 1111111111111111111111111111111111111111111111111111111111111111 # bitmap word 7
072-080: b 1111111100000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63

# 32-bits wide

build
1010101010111111111110000001110
----
1010101010111111111110000001110
Binary representation:
00-01: x 00                                                               # bitmap encoding
01-08: x 00000000000000                                                   # padding to align to 64-bit boundary
08-16: b 0101010111111101000111110011100000000000000000000000000000000000 # bitmap word 0
16-24: b 0000000100000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63

# 33-bits wide

build
10101010101111111111100000011101
----
10101010101111111111100000011101
Binary representation:
00-01: x 00                                                               # bitmap encoding
01-08: x 00000000000000                                                   # padding to align to 64-bit boundary
08-16: b 0101010111111101000111111011100000000000000000000000000000000000 # bitmap word 0
16-24: b 0000000100000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63

# 64-bits wide

build
1010101010111111111110000001110101010101011111111111000000111011
----
1010101010111111111110000001110101010101011111111111000000111011
Binary representation:
00-01: x 00                                                               # bitmap encoding
01-08: x 00000000000000                                                   # padding to align to 64-bit boundary
08-16: b 0101010111111101000111111011100010101010111111100000111111011100 # bitmap word 0
16-24: b 0000000100000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63

# 63-bits wide

build
101010101011111111111000000111010101010101111111111100000011101
----
101010101011111111111000000111010101010101111111111100000011101
Binary representation:
00-01: x 00                                                               # bitmap encoding
01-08: x 00000000000000                                                   # padding to align to 64-bit boundary
08-16: b 0101010111111101000111111011100010101010111111100000111101011100 # bitmap word 0
16-24: b 0000000100000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63

# 65-bits wide

build
1010101010111111111110000001110101010101011111111111000000111011
1
----
1010101010111111111110000001110101010101011111111111000000111011
1
Binary representation:
00-01: x 00                                                               # bitmap encoding
01-08: x 00000000000000                                                   # padding to align to 64-bit boundary
08-16: b 0101010111111101000111111011100010101010111111100000111111011100 # bitmap word 0
16-24: b 0000000100000000000000000000000000000000000000000000000000000000 # bitmap word 1
24-32: b 0000001100000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63

build
1111111111111111111111111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111
----
1111111111111111111111111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111
Binary representation:
000-001: x 00                                                               # bitmap encoding
001-008: x 00000000000000                                                   # padding to align to 64-bit boundary
008-016: b 1111111111111111111111111111111111111111111111111111111111111111 # bitmap word 0
016-024: b 1111111111111111111111111111111111111111111111111111111111111111 # bitmap word 1
024-032: b 1111111111111111111111111111111111111111111111111111111111111111 # bitmap word 2
032-040: b 1111111111111111111111111111111111111111111111111111111111111111 # bitmap word 3
040-048: b 1111111111111111111111111111111111111111111111111111111111111111 # bitmap word 4
048-056: b 0001111100000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63

build
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
----
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
Binary representation:
0-1: x 01 # bitmap encoding

build
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000001
----
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000001
Binary representation:
000-001: x 00                                                               # bitmap encoding
001-008: x 00000000000000                                                   # padding to align to 64-bit boundary
008-016: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap word 0
016-024: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap word 1
024-032: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap word 2
032-040: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap word 3
040-048: b 0000000000000000000000000000000000000000000000000000000010000000 # bitmap word 4
048-056: b 0001000000000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63

# Write out fewer rows than we set. The bitmap summary should reflect the
# truncated view of the bitmap.

build rows=192
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000111000000000000000000000000000000000000000000000000000
----
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
Binary representation:
00-01: x 00                                                               # bitmap encoding
01-08: x 00000000000000                                                   # padding to align to 64-bit boundary
08-16: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap word 0
16-24: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap word 1
24-32: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap word 2
32-40: b 0000000000000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63
