init
----
size=51:
0: prefixes:       prefixbytes(16): 0 keys
1: suffixes:       bytes: 0 rows set; 0 bytes in data
2: trailers:       uint: 0 rows
3: prefix changed: bitmap
4: values:         bytes: 0 rows set; 0 bytes in data
5: is-value-ext:   bitmap
6: is-obsolete:    bitmap

write
a@10#0,SET:apple
b@5#0,SET:banana
b@2#0,SETWITHDEL:blueberry
c@9#0,SETWITHDEL:coconut
c@6#0,SET:cantelope
c@1#0,SET:clementine
----
size=161:
0: prefixes:       prefixbytes(16): 6 keys
1: suffixes:       bytes: 6 rows set; 13 bytes in data
2: trailers:       uint: 6 rows
3: prefix changed: bitmap
4: values:         bytes: 6 rows set; 46 bytes in data
5: is-value-ext:   bitmap
6: is-obsolete:    bitmap

write
d@11#0,DEL: obsolete
----
size=193:
0: prefixes:       prefixbytes(16): 7 keys
1: suffixes:       bytes: 7 rows set; 16 bytes in data
2: trailers:       uint: 7 rows
3: prefix changed: bitmap
4: values:         bytes: 7 rows set; 47 bytes in data
5: is-value-ext:   bitmap
6: is-obsolete:    bitmap

finish
----
LastKey: d@11#0,DEL
# data block header
000-004: x 04000000                                                         # maximum key length: 4
# columnar block header
004-005: x 01                                                               # version 1
005-007: x 0700                                                             # 7 columns
007-011: x 07000000                                                         # 7 rows
011-012: b 00000100                                                         # col 0: prefixbytes
012-016: x 2e000000                                                         # col 0: page start 46
016-017: b 00000011                                                         # col 1: bytes
017-021: x 3d000000                                                         # col 1: page start 61
021-022: b 00000010                                                         # col 2: uint
022-026: x 56000000                                                         # col 2: page start 86
026-027: b 00000001                                                         # col 3: bool
027-031: x 5e000000                                                         # col 3: page start 94
031-032: b 00000011                                                         # col 4: bytes
032-036: x 70000000                                                         # col 4: page start 112
036-037: b 00000001                                                         # col 5: bool
037-041: x a8000000                                                         # col 5: page start 168
041-042: b 00000001                                                         # col 6: bool
042-046: x a9000000                                                         # col 6: page start 169
# data for column 0
# PrefixBytes
046-047: x 04                                                               # bundleSize: 16
# Offsets table
047-048: x 01                                                               # encoding: 1b
048-049: x 00                                                               # data[0] = 0 [57 overall]
049-050: x 00                                                               # data[1] = 0 [57 overall]
050-051: x 01                                                               # data[2] = 1 [58 overall]
051-052: x 02                                                               # data[3] = 2 [59 overall]
052-053: x 02                                                               # data[4] = 2 [59 overall]
053-054: x 03                                                               # data[5] = 3 [60 overall]
054-055: x 03                                                               # data[6] = 3 [60 overall]
055-056: x 03                                                               # data[7] = 3 [60 overall]
056-057: x 04                                                               # data[8] = 4 [61 overall]
# Data
057-057: x                                                                  # data[00]:  (block prefix)
057-057: x                                                                  # data[01]:  (bundle prefix)
057-058: x 61                                                               # data[02]: a
058-059: x 62                                                               # data[03]: b
059-059: x                                                                  # data[04]: .
059-060: x 63                                                               # data[05]: c
060-060: x                                                                  # data[06]: .
060-060: x                                                                  # data[07]: .
060-061: x 64                                                               # data[08]: d
# data for column 1
# rawbytes
# offsets table
061-062: x 01                                                               # encoding: 1b
062-063: x 00                                                               # data[0] = 0 [70 overall]
063-064: x 03                                                               # data[1] = 3 [73 overall]
064-065: x 05                                                               # data[2] = 5 [75 overall]
065-066: x 07                                                               # data[3] = 7 [77 overall]
066-067: x 09                                                               # data[4] = 9 [79 overall]
067-068: x 0b                                                               # data[5] = 11 [81 overall]
068-069: x 0d                                                               # data[6] = 13 [83 overall]
069-070: x 10                                                               # data[7] = 16 [86 overall]
# data
070-073: x 403130                                                           # data[0]: @10
073-075: x 4035                                                             # data[1]: @5
075-077: x 4032                                                             # data[2]: @2
077-079: x 4039                                                             # data[3]: @9
079-081: x 4036                                                             # data[4]: @6
081-083: x 4031                                                             # data[5]: @1
083-086: x 403131                                                           # data[6]: @11
# data for column 2
086-087: x 01                                                               # encoding: 1b
087-088: x 01                                                               # data[0] = 1
088-089: x 01                                                               # data[1] = 1
089-090: x 12                                                               # data[2] = 18
090-091: x 12                                                               # data[3] = 18
091-092: x 01                                                               # data[4] = 1
092-093: x 01                                                               # data[5] = 1
093-094: x 00                                                               # data[6] = 0
# data for column 3
094-095: x 00                                                               # bitmap encoding
095-096: x 00                                                               # padding to align to 64-bit boundary
096-104: b 0100101100000000000000000000000000000000000000000000000000000000 # bitmap word 0
104-112: b 0000000100000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63
# data for column 4
# rawbytes
# offsets table
112-113: x 01                                                               # encoding: 1b
113-114: x 00                                                               # data[0] = 0 [121 overall]
114-115: x 05                                                               # data[1] = 5 [126 overall]
115-116: x 0b                                                               # data[2] = 11 [132 overall]
116-117: x 14                                                               # data[3] = 20 [141 overall]
117-118: x 1b                                                               # data[4] = 27 [148 overall]
118-119: x 24                                                               # data[5] = 36 [157 overall]
119-120: x 2e                                                               # data[6] = 46 [167 overall]
120-121: x 2f                                                               # data[7] = 47 [168 overall]
# data
121-126: x 6170706c65                                                       # data[0]: apple
126-132: x 62616e616e61                                                     # data[1]: banana
132-141: x 626c75656265727279                                               # data[2]: blueberry
141-148: x 636f636f6e7574                                                   # data[3]: coconut
148-157: x 63616e74656c6f7065                                               # data[4]: cantelope
157-167: x 636c656d656e74696e65                                             # data[5]: clementine
167-168: x 20                                                               # data[6]:
# data for column 5
168-169: x 01                                                               # bitmap encoding
# data for column 6
169-170: x 00                                                               # bitmap encoding
170-176: x 000000000000                                                     # padding to align to 64-bit boundary
176-184: b 0100000000000000000000000000000000000000000000000000000000000000 # bitmap word 0
184-192: b 0000000100000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63
192-193: x 00                                                               # block padding byte

iter
first
next
next
next
next
next
next
next
----
first: a@10:apple
 next: b@5:banana
 next: b@2:blueberry
 next: c@9:coconut
 next: c@6:cantelope
 next: c@1:clementine
 next: d@11: 
 next: .

iter
last
prev
prev
prev
prev
prev
prev
prev
----
last: d@11: 
prev: c@1:clementine
prev: c@6:cantelope
prev: c@9:coconut
prev: b@2:blueberry
prev: b@5:banana
prev: a@10:apple
prev: .

iter
seek-ge a
seek-ge a@10
seek-ge a@3
seek-ge a@1
seek-ge b
seek-ge b@999999
seek-ge b@5
seek-ge b@4
seek-ge b@3
seek-ge b@2
seek-ge b@1
seek-ge c
----
       seek-ge a: a@10:apple
    seek-ge a@10: a@10:apple
     seek-ge a@3: b@5:banana
     seek-ge a@1: b@5:banana
       seek-ge b: b@5:banana
seek-ge b@999999: b@5:banana
     seek-ge b@5: b@5:banana
     seek-ge b@4: b@2:blueberry
     seek-ge b@3: b@2:blueberry
     seek-ge b@2: b@2:blueberry
     seek-ge b@1: c@9:coconut
       seek-ge c: c@9:coconut

iter
seek-ge c@10
seek-ge c@9
seek-ge c@8
seek-ge c@7
seek-ge c@6
seek-ge c@5
seek-ge c@4
seek-ge c@3
seek-ge c@2
seek-ge c@1
seek-ge c@0
seek-ge d
seek-ge d@11
seek-ge d@10
----
seek-ge c@10: c@9:coconut
 seek-ge c@9: c@9:coconut
 seek-ge c@8: c@6:cantelope
 seek-ge c@7: c@6:cantelope
 seek-ge c@6: c@6:cantelope
 seek-ge c@5: c@1:clementine
 seek-ge c@4: c@1:clementine
 seek-ge c@3: c@1:clementine
 seek-ge c@2: c@1:clementine
 seek-ge c@1: c@1:clementine
 seek-ge c@0: d@11: 
   seek-ge d: d@11: 
seek-ge d@11: d@11: 
seek-ge d@10: .

iter
seek-lt a
seek-lt a@10
seek-lt a@3
seek-lt a@1
seek-lt b
seek-lt b@999999
seek-lt b@5
seek-lt b@4
seek-lt b@3
seek-lt b@2
seek-lt b@1
seek-lt c
----
       seek-lt a: .
    seek-lt a@10: .
     seek-lt a@3: a@10:apple
     seek-lt a@1: a@10:apple
       seek-lt b: a@10:apple
seek-lt b@999999: a@10:apple
     seek-lt b@5: a@10:apple
     seek-lt b@4: b@5:banana
     seek-lt b@3: b@5:banana
     seek-lt b@2: b@5:banana
     seek-lt b@1: b@2:blueberry
       seek-lt c: b@2:blueberry

iter
seek-lt c@10
seek-lt c@9
seek-lt c@8
seek-lt c@7
seek-lt c@6
seek-lt c@5
seek-lt c@4
seek-lt c@3
seek-lt c@2
seek-lt c@1
seek-lt c@0
seek-lt d
seek-lt d@11
seek-lt d@10
----
seek-lt c@10: b@2:blueberry
 seek-lt c@9: b@2:blueberry
 seek-lt c@8: c@9:coconut
 seek-lt c@7: c@9:coconut
 seek-lt c@6: c@9:coconut
 seek-lt c@5: c@6:cantelope
 seek-lt c@4: c@6:cantelope
 seek-lt c@3: c@6:cantelope
 seek-lt c@2: c@6:cantelope
 seek-lt c@1: c@6:cantelope
 seek-lt c@0: c@1:clementine
   seek-lt d: c@1:clementine
seek-lt d@11: c@1:clementine
seek-lt d@10: d@11: 

iter invalidated
first
seek-ge foo
next
prev
seek-lt foo
last
----
      first: .
seek-ge foo: .
       next: .
       prev: .
seek-lt foo: .
       last: .

init
----
size=51:
0: prefixes:       prefixbytes(16): 0 keys
1: suffixes:       bytes: 0 rows set; 0 bytes in data
2: trailers:       uint: 0 rows
3: prefix changed: bitmap
4: values:         bytes: 0 rows set; 0 bytes in data
5: is-value-ext:   bitmap
6: is-obsolete:    bitmap

write
aaaaaaaaaaaaaaappalling@10#0,SET:a
aaaaaaaaaaaaaaapparel@10#0,SET:a
aaaaaaaaaaaaaaapparition@10#0,SET:a
aaaaaaaaaaaaaaappearing@10#0,SET:a
aaaaaaaaaaaaaaappend@10#0,SET:a
aaaaaaaaaaaaaaappendage@10#0,SET:a
aaaaaaaaaaaaaaappendix@10#0,SET:a
aaaaaaaaaaaaaaapplaud@10#0,SET:a
aaaaaaaaaaaaaaapple@10#0,SET:a
aaaaaaaaaaaaaaapplication@10#0,SET:a
aaaaaaaaaaaaaaapplied@10#0,SET:a
aaaaaaaaaaaaaaapplying@10#0,SET:a
aaaaaaaaaaaaaaappoint@10#0,SET:a
aaaaaaaaaaaaaaapposes@10#0,SET:a
aaaaaaaaaaaaaaapproves@10#0,SET:a
aaaaaaaaaaaaaaarresting@10#0,SET:a
aaaaaaaaaaaaaaarrived@10#0,SET:a
----
size=335:
0: prefixes:       prefixbytes(16): 17 keys
1: suffixes:       bytes: 17 rows set; 51 bytes in data
2: trailers:       uint: 17 rows
3: prefix changed: bitmap
4: values:         bytes: 17 rows set; 17 bytes in data
5: is-value-ext:   bitmap
6: is-obsolete:    bitmap

finish
----
LastKey: aaaaaaaaaaaaaaarrived@10#0,SET
# data block header
000-004: x 1c000000                                                         # maximum key length: 28
# columnar block header
004-005: x 01                                                               # version 1
005-007: x 0700                                                             # 7 columns
007-011: x 11000000                                                         # 17 rows
011-012: b 00000100                                                         # col 0: prefixbytes
012-016: x 2e000000                                                         # col 0: page start 46
016-017: b 00000011                                                         # col 1: bytes
017-021: x c8000000                                                         # col 1: page start 200
021-022: b 00000010                                                         # col 2: uint
022-026: x 0e010000                                                         # col 2: page start 270
026-027: b 00000001                                                         # col 3: bool
027-031: x 17010000                                                         # col 3: page start 279
031-032: b 00000011                                                         # col 4: bytes
032-036: x 28010000                                                         # col 4: page start 296
036-037: b 00000001                                                         # col 5: bool
037-041: x 4c010000                                                         # col 5: page start 332
041-042: b 00000001                                                         # col 6: bool
042-046: x 4d010000                                                         # col 6: page start 333
# data for column 0
# PrefixBytes
046-047: x 04                                                               # bundleSize: 16
# Offsets table
047-048: x 01                                                               # encoding: 1b
048-049: x 0f                                                               # data[0] = 15 [83 overall]
049-050: x 0f                                                               # data[1] = 15 [83 overall]
050-051: x 17                                                               # data[2] = 23 [91 overall]
051-052: x 1d                                                               # data[3] = 29 [97 overall]
052-053: x 26                                                               # data[4] = 38 [106 overall]
053-054: x 2e                                                               # data[5] = 46 [114 overall]
054-055: x 33                                                               # data[6] = 51 [119 overall]
055-056: x 3b                                                               # data[7] = 59 [127 overall]
056-057: x 42                                                               # data[8] = 66 [134 overall]
057-058: x 48                                                               # data[9] = 72 [140 overall]
058-059: x 4c                                                               # data[10] = 76 [144 overall]
059-060: x 56                                                               # data[11] = 86 [154 overall]
060-061: x 5c                                                               # data[12] = 92 [160 overall]
061-062: x 63                                                               # data[13] = 99 [167 overall]
062-063: x 69                                                               # data[14] = 105 [173 overall]
063-064: x 6f                                                               # data[15] = 111 [179 overall]
064-065: x 76                                                               # data[16] = 118 [186 overall]
065-066: x 7e                                                               # data[17] = 126 [194 overall]
066-067: x 84                                                               # data[18] = 132 [200 overall]
067-068: x 84                                                               # data[19] = 132 [200 overall]
# Data
068-078: x 61616161616161616161                                             # data[00]: aaaaaaaaaaaaaaa (block prefix)
078-083: x 6161616161                                                       # (continued...)
083-083: x                                                                  # data[01]: ............... (bundle prefix)
083-091: x 7070616c6c696e67                                                 # data[02]: ...............ppalling
091-097: x 70706172656c                                                     # data[03]: ...............pparel
097-106: x 707061726974696f6e                                               # data[04]: ...............pparition
106-114: x 7070656172696e67                                                 # data[05]: ...............ppearing
114-119: x 7070656e64                                                       # data[06]: ...............ppend
119-127: x 7070656e64616765                                                 # data[07]: ...............ppendage
127-134: x 7070656e646978                                                   # data[08]: ...............ppendix
134-140: x 70706c617564                                                     # data[09]: ...............pplaud
140-144: x 70706c65                                                         # data[10]: ...............pple
144-154: x 70706c69636174696f6e                                             # data[11]: ...............pplication
154-160: x 70706c696564                                                     # data[12]: ...............pplied
160-167: x 70706c79696e67                                                   # data[13]: ...............pplying
167-173: x 70706f696e74                                                     # data[14]: ...............ppoint
173-179: x 70706f736573                                                     # data[15]: ...............pposes
179-186: x 7070726f766573                                                   # data[16]: ...............pproves
186-194: x 7272657374696e67                                                 # data[17]: ...............rresting
194-200: x 727269766564                                                     # data[18]: ...............rrived (bundle prefix)
200-200: x                                                                  # data[19]: .....................
# data for column 1
# rawbytes
# offsets table
200-201: x 01                                                               # encoding: 1b
201-202: x 00                                                               # data[0] = 0 [219 overall]
202-203: x 03                                                               # data[1] = 3 [222 overall]
203-204: x 06                                                               # data[2] = 6 [225 overall]
204-205: x 09                                                               # data[3] = 9 [228 overall]
205-206: x 0c                                                               # data[4] = 12 [231 overall]
206-207: x 0f                                                               # data[5] = 15 [234 overall]
207-208: x 12                                                               # data[6] = 18 [237 overall]
208-209: x 15                                                               # data[7] = 21 [240 overall]
209-210: x 18                                                               # data[8] = 24 [243 overall]
210-211: x 1b                                                               # data[9] = 27 [246 overall]
211-212: x 1e                                                               # data[10] = 30 [249 overall]
212-213: x 21                                                               # data[11] = 33 [252 overall]
213-214: x 24                                                               # data[12] = 36 [255 overall]
214-215: x 27                                                               # data[13] = 39 [258 overall]
215-216: x 2a                                                               # data[14] = 42 [261 overall]
216-217: x 2d                                                               # data[15] = 45 [264 overall]
217-218: x 30                                                               # data[16] = 48 [267 overall]
218-219: x 33                                                               # data[17] = 51 [270 overall]
# data
219-222: x 403130                                                           # data[0]: @10
222-225: x 403130                                                           # data[1]: @10
225-228: x 403130                                                           # data[2]: @10
228-231: x 403130                                                           # data[3]: @10
231-234: x 403130                                                           # data[4]: @10
234-237: x 403130                                                           # data[5]: @10
237-240: x 403130                                                           # data[6]: @10
240-243: x 403130                                                           # data[7]: @10
243-246: x 403130                                                           # data[8]: @10
246-249: x 403130                                                           # data[9]: @10
249-252: x 403130                                                           # data[10]: @10
252-255: x 403130                                                           # data[11]: @10
255-258: x 403130                                                           # data[12]: @10
258-261: x 403130                                                           # data[13]: @10
261-264: x 403130                                                           # data[14]: @10
264-267: x 403130                                                           # data[15]: @10
267-270: x 403130                                                           # data[16]: @10
# data for column 2
270-271: x 80                                                               # encoding: const
271-279: x 0100000000000000                                                 # 64-bit constant: 1
# data for column 3
279-280: x 00                                                               # bitmap encoding
280-288: b 1111111111111111000000010000000000000000000000000000000000000000 # bitmap word 0
288-296: b 0000000100000000000000000000000000000000000000000000000000000000 # bitmap summary word 0-63
# data for column 4
# rawbytes
# offsets table
296-297: x 01                                                               # encoding: 1b
297-298: x 00                                                               # data[0] = 0 [315 overall]
298-299: x 01                                                               # data[1] = 1 [316 overall]
299-300: x 02                                                               # data[2] = 2 [317 overall]
300-301: x 03                                                               # data[3] = 3 [318 overall]
301-302: x 04                                                               # data[4] = 4 [319 overall]
302-303: x 05                                                               # data[5] = 5 [320 overall]
303-304: x 06                                                               # data[6] = 6 [321 overall]
304-305: x 07                                                               # data[7] = 7 [322 overall]
305-306: x 08                                                               # data[8] = 8 [323 overall]
306-307: x 09                                                               # data[9] = 9 [324 overall]
307-308: x 0a                                                               # data[10] = 10 [325 overall]
308-309: x 0b                                                               # data[11] = 11 [326 overall]
309-310: x 0c                                                               # data[12] = 12 [327 overall]
310-311: x 0d                                                               # data[13] = 13 [328 overall]
311-312: x 0e                                                               # data[14] = 14 [329 overall]
312-313: x 0f                                                               # data[15] = 15 [330 overall]
313-314: x 10                                                               # data[16] = 16 [331 overall]
314-315: x 11                                                               # data[17] = 17 [332 overall]
# data
315-316: x 61                                                               # data[0]: a
316-317: x 61                                                               # data[1]: a
317-318: x 61                                                               # data[2]: a
318-319: x 61                                                               # data[3]: a
319-320: x 61                                                               # data[4]: a
320-321: x 61                                                               # data[5]: a
321-322: x 61                                                               # data[6]: a
322-323: x 61                                                               # data[7]: a
323-324: x 61                                                               # data[8]: a
324-325: x 61                                                               # data[9]: a
325-326: x 61                                                               # data[10]: a
326-327: x 61                                                               # data[11]: a
327-328: x 61                                                               # data[12]: a
328-329: x 61                                                               # data[13]: a
329-330: x 61                                                               # data[14]: a
330-331: x 61                                                               # data[15]: a
331-332: x 61                                                               # data[16]: a
# data for column 5
332-333: x 01                                                               # bitmap encoding
# data for column 6
333-334: x 01                                                               # bitmap encoding
334-335: x 00                                                               # block padding byte

iter
seek-ge aaa
seek-ge aaaaaaaaa
seek-ge aaaaaaaaaaaaaaapp
seek-ge aaaaaaaaaaaaaaapparel@10
seek-ge aaaaaaaaaaaaaaapparh
seek-ge aaaaaaaaaaaaaaarresting@10
seek-ge aaaaaaaaaaaaaaarrived@10
----
                       seek-ge aaa: aaaaaaaaaaaaaaappalling@10:a
                 seek-ge aaaaaaaaa: aaaaaaaaaaaaaaappalling@10:a
         seek-ge aaaaaaaaaaaaaaapp: aaaaaaaaaaaaaaappalling@10:a
  seek-ge aaaaaaaaaaaaaaapparel@10: aaaaaaaaaaaaaaapparel@10:a
      seek-ge aaaaaaaaaaaaaaapparh: aaaaaaaaaaaaaaapparition@10:a
seek-ge aaaaaaaaaaaaaaarresting@10: aaaaaaaaaaaaaaarresting@10:a
  seek-ge aaaaaaaaaaaaaaarrived@10: aaaaaaaaaaaaaaarrived@10:a

iter
seek-lt aaa
seek-lt aaaaaaaaa
seek-lt aaaaaaaaaaaaaaapp
seek-lt aaaaaaaaaaaaaaapparel@10
seek-lt aaaaaaaaaaaaaaapparh
seek-lt aaaaaaaaaaaaaaarresting@10
seek-lt aaaaaaaaaaaaaaarrived@10
----
                       seek-lt aaa: .
                 seek-lt aaaaaaaaa: .
         seek-lt aaaaaaaaaaaaaaapp: .
  seek-lt aaaaaaaaaaaaaaapparel@10: aaaaaaaaaaaaaaappalling@10:a
      seek-lt aaaaaaaaaaaaaaapparh: aaaaaaaaaaaaaaapparel@10:a
seek-lt aaaaaaaaaaaaaaarresting@10: aaaaaaaaaaaaaaapproves@10:a
  seek-lt aaaaaaaaaaaaaaarrived@10: aaaaaaaaaaaaaaarresting@10:a
