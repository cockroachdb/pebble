# init a multi-level compaction, because output level max bytes exceeded
setup-inputs a a
L1
  a.SET.1-b.SET.2 size=6
L2 max-size=5
  a.SET.3-c.SET.4 size=5
  g.SET.3-h.SET.4 size=6
L3
  c.SET.3-d.SET.2
----
L1
  000001:[a#1,1-b#2,1]
L2
  000002:[a#3,1-c#4,1]
L3
  000004:[c#3,1-d#2,1]
init-multi-level(1,2,3)

# init a multi-level compaction, because over half of output level is a part of compaction
setup-inputs a a
L1
  a.SET.1-b.SET.2 size=6
L2 max-size=100
  a.SET.3-c.SET.4 size=5
  g.SET.3-h.SET.4 size=4
L3
  c.SET.3-d.SET.2
----
L1
  000001:[a#1,1-b#2,1]
L2
  000002:[a#3,1-c#4,1]
L3
  000004:[c#3,1-d#2,1]
init-multi-level(1,2,3)

# init multi-level compaction, without an overlapping file in the lowest level
setup-inputs a a
L1
  a.SET.1-b.SET.2 size=6
L2 max-size=5
  a.SET.3-c.SET.4 size=5
L3
  e.SET.3-f.SET.2
----
L1
  000001:[a#1,1-b#2,1]
L2
  000002:[a#3,1-c#4,1]
init-multi-level(1,2,3)

# init multi-level compaction, with no file in the lowest level
setup-inputs a a
L1
  a.SET.1-b.SET.2 size=6
L2 max-size=5
  a.SET.3-c.SET.4 size=5
----
L1
  000001:[a#1,1-b#2,1]
L2
  000002:[a#3,1-c#4,1]
init-multi-level(1,2,3)

# init a multi-level compaction, without an overlapping file in the intermediate level
setup-inputs a a
L1
  a.SET.1-b.SET.2 size=6
L2 max-size=5
  e.SET.3-f.SET.2 size=1
L3
  a.SET.3-c.SET.4 size=5
----
L1
  000001:[a#1,1-b#2,1]
L3
  000003:[a#3,1-c#4,1]
init-multi-level(1,2,3)

# Init a multi-level compaction, without an overlapping file in the
# intermediate and output levels
setup-inputs a a
L1
  a.SET.1-b.SET.2 size=6
L2 max-size=5
  e.SET.3-f.SET.2 size=1
L3
  e.SET.4-f.SET.5 size=5
----
L1
  000001:[a#1,1-b#2,1]
init-multi-level(1,2,3)

# Init a multi-level compaction, without an overlapping file in the intermediate level
setup-inputs a a
L1
  a.SET.1-b.SET.2 size=6
L2 max-size=5
  e.SET.3-f.SET.2
L3
  a.SET.3-c.SET.4 size=5
----
L1
  000001:[a#1,1-b#2,1]
L3
  000003:[a#3,1-c#4,1]
init-multi-level(1,2,3)

# init a multi-level compaction which expands the intermediate level with a file that only
# overlaps with the lowest level. (gets included during second setupInputs call)
setup-inputs a a
L1
  a.SET.1-b.SET.2 size=6
L2 max-size=5
  c.SET.2-d.SET.3 size=1
  e.SET.3-f.SET.2 size=1
L3
  a.SET.3-c.SET.4 size=5
----
L1
  000001:[a#1,1-b#2,1]
L2
  000002:[c#2,1-d#3,1]
L3
  000004:[a#3,1-c#4,1]
init-multi-level(1,2,3)

# Init a multi-level compaction which DOES NOT expand the input level with a file that
# only overlaps with the lowest level, even if it doesn't expand the output level keyspan.
# TODO(msbutler): include this file in the compaction
setup-inputs a a
L1
  a.SET.1-b.SET.2 size=6
  c.SET.2-d.SET.3 size=1
L2 max-size=5
  e.SET.3-f.SET.2 size=1
L3
  a.SET.3-c.SET.4
  h.SET.3-i.SET.4
----
L1
  000001:[a#1,1-b#2,1]
L3
  000004:[a#3,1-c#4,1]
init-multi-level(1,2,3)

# Init a multi-level level compaction, bc the input level expanded in the first
# setupInputs call
setup-inputs a a
L1
  a.SET.5-b.SET.6 size=4
  c.SET.4-e.SET.3 size=2
L2 max-size=5
  a.SET.3-d.SET.4 size=2
L3
  c.SET.5-e.SET.4
----
L1
  000001:[a#5,1-b#6,1]
  000002:[c#4,1-e#3,1]
L2
  000003:[a#3,1-d#4,1]
L3
  000004:[c#5,1-e#4,1]
init-multi-level(1,2,3)

# Verify an expansion of the output level in the initial setupInputs will init a multi-level
# compaction
setup-inputs a a
L1
  a.SET.5-b.SET.6 size=2
L2 max-size=4
  a.SET.3-c.SET.4 size=3
  c.SET.3-d.SET.2 size=3
L3
  c.SET.4-d.SET.4
----
L1
  000001:[a#5,1-b#6,1]
L2
  000002:[a#3,1-c#4,1]
  000003:[c#3,1-d#2,1]
L3
  000004:[c#4,1-d#4,1]
init-multi-level(1,2,3)

# Verify an expansion of the output level in the initial setupInputs will init a multi-level
# compaction
setup-inputs a a
L1
  a.SET.5-b.SET.6 size=2
L2 max-size=4
  a.SET.3-c.SET.4 size=3
  c.SET.3-d.SET.2 size=3
L3
  c.SET.4-d.SET.4
----
L1
  000001:[a#5,1-b#6,1]
L2
  000002:[a#3,1-c#4,1]
  000003:[c#3,1-d#2,1]
L3
  000004:[c#4,1-d#4,1]
init-multi-level(1,2,3)

# Verify an expansion of the output and start level in the initial setupInputs will init a
# multi-level compaction
setup-inputs a a
L1
  a.SET.5-b.SET.6 size=2
  d.SET.3-e.SET.3 size=4
L2 max-size=5
  a.SET.3-c.SET.4 size=2
  c.SET.3-d.SET.2 size=2
L3
  c.SET.4-d.SET.4
----
L1
  000001:[a#5,1-b#6,1]
  000002:[d#3,1-e#3,1]
L2
  000003:[a#3,1-c#4,1]
  000004:[c#3,1-d#2,1]
L3
  000005:[c#4,1-d#4,1]
init-multi-level(1,2,3)

# Verify the second setupInputs call does not add an intermediate file if doing so would expand the
# output level (i.e. the pc.grow logic)
setup-inputs a a
L1
  a.SET.1-b.SET.2 size=6
L2 max-size=5
  d.SET.2-f.SET.2 size=1
L3
  b.SET.1-d.SET.1 size=2
  e.SET.4-f.SET.5 size=5
----
L1
  000001:[a#1,1-b#2,1]
L3
  000003:[b#1,1-d#1,1]
init-multi-level(1,2,3)

# Don't init a multi-level compaction because the original output level has room
setup-inputs a a
L1
  a.SET.1-b.SET.2 size=3
L2 max-size=8
  a.SET.3-c.SET.4 size=1
  d.SET.3-e.SET.4 size=3
L3
  c.SET.3-d.SET.2
----
L1
  000001:[a#1,1-b#2,1]
L2
  000002:[a#3,1-c#4,1]

# Verify the max number of input levels equals 2
setup-inputs a a
L1
  a.SET.1-b.SET.2 size=6
L2 max-size=5
  a.SET.3-c.SET.4 size=5
L3 max-size=3
  c.SET.3-d.SET.2
L4
  c.SET.4-d.SET.3
----
L1
  000001:[a#1,1-b#2,1]
L2
  000002:[a#3,1-c#4,1]
L3
  000003:[c#3,1-d#2,1]
init-multi-level(1,2,3)

# Don't init multi-level compaction if max size limit exceeded by initial setupInputs
setup-inputs avail-bytes=10 a a
L1
  a.SET.1-b.SET.2 size=6
L2 max-size=3
  a.SET.5-b.SET.6 size=3
L3
  a.SET.3-d.SET.4 size=5
----
L1
  000001:[a#1,1-b#2,1]
L2
  000002:[a#5,1-b#6,1]

# During second setupInputs call, allow output level expansion even if max
# size limit is exceeded, but not the intermediate level expansion
setup-inputs avail-bytes=20 a a
L1
  a.SET.1-b.SET.2 size=4
L2 max-size=3
  a.SET.5-b.SET.6 size=4
  c.SET.4-e.SET.3 size=3
L3
  a.SET.3-d.SET.4 size=13
  d.SET.2-e.SET.2 size=8
----
L1
  000001:[a#1,1-b#2,1]
L2
  000002:[a#5,1-b#6,1]
L3
  000004:[a#3,1-d#4,1]
  000005:[d#2,1-e#2,1]
init-multi-level(1,2,3)

# Don't init a multi-level compaction if the start level is L5
setup-inputs a a
L5
  a.SET.1-b.SET.2 size=6
L6 max-size=5
  a.SET.3-c.SET.4 size=5
----
L5
  000001:[a#1,1-b#2,1]
L6
  000002:[a#3,1-c#4,1]

# Verify there is a file compacting in the lowest level
setup-inputs a a
L1
  a.SET.1-b.SET.2 size=6
L2 max-size=5
  a.SET.3-c.SET.4 size=5
L3
  c.SET.3-d.SET.2 compacting
----
L1
  000001:[a#1,1-b#2,1]
L2
  000002:[a#3,1-c#4,1]
L3
  000003:[c#3,1-d#2,1]
is-compacting
init-multi-level(1,2,3)

# don't init a multi-level compaction, as input is in L0
setup-inputs a a
L0
  a.SET.1-b.SET.2 size=6
L1 max-size=5
  a.SET.3-c.SET.4 size=5
L2
  c.SET.3-d.SET.2
----
L0
  000001:[a#1,1-b#2,1]
L1
  000002:[a#3,1-c#4,1]
