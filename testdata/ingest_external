
# Simple case.

build-remote f1
set a foo
set b bar
set c foobar
----

ingest-external
f1,5,a,cc
----

lsm
----
6:
  000004(000004):[a#10,DELSIZED-cc#inf,RANGEDEL]

iter
first
next
next
next
----
a: (foo, .)
b: (bar, .)
c: (foobar, .)
.

# Above case but with c left out at ingestion time.

reset
----

build-remote f2
set a foo
set b bar
set c foobar
----

ingest-external
f2,5,a,c
----

lsm
----
6:
  000004(000004):[a#10,DELSIZED-c#inf,RANGEDEL]

iter
first
next
next
next
----
a: (foo, .)
b: (bar, .)
.
.

build-remote f3
set c foobarbaz
set d haha
set e something
----

build-remote f4
set f foo
set g foo
set h foo
----

# This ingestion should error out due to the overlap between file spans.

ingest-external
f3,10,c,f
f4,10,e,h
----
pebble: external sstables have overlapping ranges

ingest-external
f3,10,c,f
f4,10,f,hh
----

lsm
----
6:
  000004(000004):[a#10,DELSIZED-c#inf,RANGEDEL]
  000007(000007):[c#11,DELSIZED-f#inf,RANGEDEL]
  000008(000008):[f#12,DELSIZED-hh#inf,RANGEDEL]

iter
first
next
next
next
next
next
next
next
next
----
a: (foo, .)
b: (bar, .)
c: (foobarbaz, .)
d: (haha, .)
e: (something, .)
f: (foo, .)
g: (foo, .)
h: (foo, .)
.

compact a z
----

lsm
----
6:
  000004(000004):[a#10,DELSIZED-c#inf,RANGEDEL]
  000007(000007):[c#11,DELSIZED-f#inf,RANGEDEL]
  000008(000008):[f#12,DELSIZED-hh#inf,RANGEDEL]

download a j
----
ok

lsm
----
6:
  000009:[a#0,SET-b#0,SET]
  000010:[c#0,SET-e#0,SET]
  000011:[f#0,SET-h#0,SET]

iter
first
next
next
next
next
next
next
next
next
----
a: (foo, .)
b: (bar, .)
c: (foobarbaz, .)
d: (haha, .)
e: (something, .)
f: (foo, .)
g: (foo, .)
h: (foo, .)
.

build-remote f5
set ef foo
set eg foo
set eh foo
----

ingest-external prefix-replace=(e,f)
f5,10,ff,fi
----

iter
first
next
next
next
next
next
next
next
next
next
next
next
----
a: (foo, .)
b: (bar, .)
c: (foobarbaz, .)
d: (haha, .)
e: (something, .)
f: (foo, .)
ff: (foo, .)
fg: (foo, .)
fh: (foo, .)
g: (foo, .)
h: (foo, .)
.

# Test that ingestion with a prefix or suffix replacement rule fails on older
# major versions

reset format-major-version=16
----

build-remote f5
set ef foo
set eg foo
set eh foo
----

ingest-external prefix-replace=(e,f)
f5,10,ff,fi
----
pebble: format major version too old for synthetic prefix ingestion


ingest-external suffix-replace=@5
f5,10,ff,fi
----
pebble: format major version too old for synthetic suffix ingestion


# Test plumbing for ingestion with suffix replacement
reset
----

build-remote f1
set a@1 foo
set b@2 foo
set c@1 foo
----

ingest-external suffix-replace=@5
f1,10,a,d
----

iter
first
next
next
----
a@5: (foo, .)
b@5: (foo, .)
c@5: (foo, .)

# Verify that we require bounds without suffix if we use suffix replacement.
ingest-external suffix-replace=@5
f6,10,a@1,z@10
----
pebble: synthetic suffix is set but smallest key has suffix

ingest-external suffix-replace=@5
f6,10,a,z@10
----
pebble: synthetic suffix is set but largest key has suffix

# Test the case when we are ingesting part of a RANGEDEL.
reset
----

batch
set i bar
----

build-remote f6
set b foo
del-range f u
----

ingest-external
f6,10,a,c
f6,10,g,v
----

# The previous element cannot be i, because it is inside the [g, v) portion of
# the [f, u) RANGEDEL.
iter
prev
----
b: (foo, .)

# Test the case where the input files need to be reordered during ingest.
reset
----

build-remote f7
set a foo
----

build-remote f8
set x bar
----

ingest-external
f8,10,x,y
f7,10,a,b
----

iter
first
next
----
a: (foo, .)
x: (bar, .)

# Test ViaBackingFileDownload.

reset
----

build-remote f7
set fc foo
set fd haha
set fe something
----

build-remote f8
set fg foo
set fh foo
set fi foo
----

ingest-external prefix-replace=(f,g)
f7,10,gc,gf
f8,10,gg,gj
----

iter
seek-ge g
next
next
next
next
next
----
gc: (foo, .)
gd: (haha, .)
ge: (something, .)
gg: (foo, .)
gh: (foo, .)
gi: (foo, .)

lsm
----
6:
  000004(000004):[gc#10,DELSIZED-gf#inf,RANGEDEL]
  000005(000005):[gg#11,DELSIZED-gj#inf,RANGEDEL]

download g h via-backing-file-download
----
ok

lsm
----
6:
  000006(000006):[gc#10,DELSIZED-gf#inf,RANGEDEL]
  000007(000007):[gg#11,DELSIZED-gj#inf,RANGEDEL]

iter
seek-ge g
next
next
next
next
next
----
gc: (foo, .)
gd: (haha, .)
ge: (something, .)
gg: (foo, .)
gh: (foo, .)
gi: (foo, .)
