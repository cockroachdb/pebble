define
L0
  c.SET.11:foo
L1
  c.SET.0:foo
  d.SET.0:foo
----
L0.0:
  000004:[c#11,SET-c#11,SET] seqnums:[11-11] points:[c#11,SET-c#11,SET] size:654
L1:
  000005:[c#0,SET-d#0,SET] seqnums:[0-0] points:[c#0,SET-d#0,SET] size:665

mark-for-compaction file=000005
----
marked L1.000005

mark-for-compaction file=000004
----
marked L0.000004

maybe-compact
----
[JOB 100] compacted(rewrite) L1 [000005] (665B) Score=0.00 + L1 [] (0B) Score=0.00 -> L1 [000008] (665B), in 1.0s (2.0s total), output rate 665B/s
[JOB 100] compacted(rewrite) L0 [000004] (654B) Score=0.00 + L0 [] (0B) Score=0.00 -> L0 [000009] (654B), in 1.0s (2.0s total), output rate 654B/s
L0.0:
  000009:[c#11,SET-c#11,SET] seqnums:[11-11] points:[c#11,SET-c#11,SET] size:654
L1:
  000008:[c#0,SET-d#0,SET] seqnums:[0-0] points:[c#0,SET-d#0,SET] size:665

mark-for-compaction file=000008
----
marked L1.000008

mark-for-compaction file=000009
----
marked L0.000009

# Verify that we remember the files we marked for compaction across reopens.
reopen
----

maybe-compact
----
[JOB 100] compacted(rewrite) L1 [000008] (665B) Score=0.00 + L1 [] (0B) Score=0.00 -> L1 [000016] (665B), in 1.0s (2.0s total), output rate 665B/s
[JOB 100] compacted(rewrite) L0 [000009] (654B) Score=0.00 + L0 [] (0B) Score=0.00 -> L0 [000017] (654B), in 1.0s (2.0s total), output rate 654B/s
L0.0:
  000017:[c#11,SET-c#11,SET] seqnums:[11-11] points:[c#11,SET-c#11,SET] size:654
L1:
  000016:[c#0,SET-d#0,SET] seqnums:[0-0] points:[c#0,SET-d#0,SET] size:665
